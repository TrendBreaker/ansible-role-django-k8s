---
k8s_kube_config: "~/.kube/config"
k8s_kube_context: ""

k8s_domain_names:
  - www.example.com

k8s_namespace: "echoserver"

k8s_memcached_enabled: false
k8s_memcached_version: "1.5.19"

k8s_redis_enabled: false
k8s_redis_version: "5.0.6"
k8s_redis_volume_size: "20Gi"

k8s_environment_variables: {}

k8s_ingress_certificate_issuer: letsencrypt-production

k8s_container_name: web
k8s_container_image: k8s.gcr.io/echoserver
k8s_container_image_pull_policy: IfNotPresent
k8s_container_image_tag: "1.10"
k8s_container_port: 8080
k8s_container_protocol: http
k8s_container_replicas: 2
k8s_container_ingress_paths:
  - /

k8s_web_containers:
  - name: "{{ k8s_container_name }}"
    image: "{{ k8s_container_image }}"
    image_pull_policy: "{{ k8s_container_image_pull_policy }}"
    tag: "{{ k8s_container_image_tag }}"
    replicas: "{{ k8s_container_replicas }}"
    port: "{{ k8s_container_port }}"
    protocol: "{{ k8s_container_protocol }}"
    ingress_paths: "{{ k8s_container_ingress_paths }}"
    environment: "{{ k8s_environment_variables }}"

k8s_worker_enabled: false
k8s_worker_image: "{{ k8s_container_image }}"
k8s_worker_image_pull_policy: "{{ k8s_container_image_pull_policy }}"
k8s_worker_image_tag: "{{ k8s_container_image_tag }}"
k8s_worker_replicas: 2
k8s_worker_celery_app: ""
k8s_worker_container:
  image: "{{ k8s_worker_image }}"
  image_pull_policy: "{{ k8s_worker_image_pull_policy }}"
  tag: "{{ k8s_worker_image_tag }}"
  replicas: "{{ k8s_worker_replicas }}"
  celery_app: "{{ k8s_worker_celery_app }}"
  environment: "{{ k8s_environment_variables }}"

k8s_templates:
  - name: namespace.yaml.j2
    state: present
  - name: redis.yaml.j2
    state: "{{ k8s_redis_enabled | ternary('present', 'absent') }}"
  - name: memcached.yaml.j2
    state: "{{ k8s_memcached_enabled | ternary('present', 'absent') }}"
  - name: web.yaml.j2
    state: present
  - name: workers.yaml.j2
    state: "{{ k8s_worker_enabled | ternary('present', 'absent') }}"
